//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ImporterTests.DatabaseManagerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DatabaseManagerService.IDatabaseManagerService")]
    public interface IDatabaseManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RetrieveFiles", ReplyAction="http://tempuri.org/IDatabaseManagerService/RetrieveFilesResponse")]
        int RetrieveFiles(string dateID, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RetrieveFiles", ReplyAction="http://tempuri.org/IDatabaseManagerService/RetrieveFilesResponse")]
        System.Threading.Tasks.Task<int> RetrieveFilesAsync(string dateID, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RetrieveRawDataFiles", ReplyAction="http://tempuri.org/IDatabaseManagerService/RetrieveRawDataFilesResponse")]
        bool RetrieveRawDataFiles(string exchangeFilename, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/RetrieveRawDataFiles", ReplyAction="http://tempuri.org/IDatabaseManagerService/RetrieveRawDataFilesResponse")]
        System.Threading.Tasks.Task<bool> RetrieveRawDataFilesAsync(string exchangeFilename, int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ModeCheck", ReplyAction="http://tempuri.org/IDatabaseManagerService/ModeCheckResponse")]
        bool ModeCheck(int mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDatabaseManagerService/ModeCheck", ReplyAction="http://tempuri.org/IDatabaseManagerService/ModeCheckResponse")]
        System.Threading.Tasks.Task<bool> ModeCheckAsync(int mode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDatabaseManagerServiceChannel : ImporterTests.DatabaseManagerService.IDatabaseManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DatabaseManagerServiceClient : System.ServiceModel.ClientBase<ImporterTests.DatabaseManagerService.IDatabaseManagerService>, ImporterTests.DatabaseManagerService.IDatabaseManagerService {
        
        public DatabaseManagerServiceClient() {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DatabaseManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int RetrieveFiles(string dateID, int mode) {
            return base.Channel.RetrieveFiles(dateID, mode);
        }
        
        public System.Threading.Tasks.Task<int> RetrieveFilesAsync(string dateID, int mode) {
            return base.Channel.RetrieveFilesAsync(dateID, mode);
        }
        
        public bool RetrieveRawDataFiles(string exchangeFilename, int mode) {
            return base.Channel.RetrieveRawDataFiles(exchangeFilename, mode);
        }
        
        public System.Threading.Tasks.Task<bool> RetrieveRawDataFilesAsync(string exchangeFilename, int mode) {
            return base.Channel.RetrieveRawDataFilesAsync(exchangeFilename, mode);
        }
        
        public bool ModeCheck(int mode) {
            return base.Channel.ModeCheck(mode);
        }
        
        public System.Threading.Tasks.Task<bool> ModeCheckAsync(int mode) {
            return base.Channel.ModeCheckAsync(mode);
        }
    }
}
